


  x = ~mask + 1; y = x == (x & -x) 
  x = -mask;     y = -mask == (x & -x);
		 y = -mask == (-mask & -(-mask));
		 y = -mask == (-mask & mask);
		 y = -mask == (mask & -mask);
		 y = (mask & -mask) == -mask;
		 y = ((mask & -mask) + mask) == 0;
		 y = ((-mask & mask) + mask) == 0;
		 
11111100	mask
00000100	-mask
00000011	~mask
00000100	~mask + 1	== x
11111100	-(~mask +1)	== -x == mask
00000100	-(~mask +1) & (~mask +1)
		mask & x
00000000	(mask & x) - x
		(mask & x) ^ x




11111100		11111001
	  movn	t1,mask
00000100		00000111
	  and	t1,mask	
00000100		00000001
	  add	t1,mask
00000000		11111010
	  jumpe	t1,foo
