	UNIVER	SYSDPU	SPECIAL SYMBOLS FOR SYSDPY FROM S.UNV
	SUBTTL	/RDH/GAT 9-SEP-85


	COMMENT	\

COPYRIGHT (c) DIGITAL EQUIPMENT CORPORATION 1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1986. ALL RIGHTS RESERVED.

THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED
ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH LICENSE AND WITH THE
INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR ANY  OTHER
COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF THE  SOFTWARE  IS  HEREBY
TRANSFERRED.

THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT  NOTICE
AND  SHOULD  NOT  BE  CONSTRUED  AS A COMMITMENT BY DIGITAL EQUIPMENT
CORPORATION.

DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY  OF  ITS
SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
\
	SUBTTL	DEFINER DEFINITION

	SEARCH	S, D36PAR	;THE MONITOR'S SYMBOLS




DEFINE	DEF(S,V),
<IFDEF S,<S==S> IFNDEF S,<IRP V,<IFDEF S,<S==S!V> IFNDEF S,<S==V>>>
 IRP V,<PURGE V>>

DEFINE	DEFL(S,V),
<IFDEF S,<S==S> IFNDEF S,<IRP V,<IFDEF S,<S==S!(V)> IFNDEF S,<S==(V)>>>
 IRP V,<PURGE V>>
	SUBTTL	DDB DEFINITIONS

DEF	$DVNAM,DEVNAM		;DEVICE'S PHYSICAL NAME
DEF	$DVCHR,DEVCHR		;DEVICE (HARDWARE) CHARACTERISTICS
				; INCLUDES HUNG TIMER
DEF	$DVIOS,DEVIOS		;DEVICE I/O STATUS WORD
	DEFL	IO$OUT,IO	;I/O IS IN OUTPUT DIRECTION
	DEF	IO$IMP,IOIMPM	;IMPROPER MODE
	DEF	IO$DER,IODERR	;DEVICE ERROR
	DEF	IO$DTE,IODTER	;DATA ERROR
DEF	$DVSER,DEVSER		;(LH) ADDRESS OF NEXT DDB IN CHAIN
				;(RH) ADDRESS OF DEVICE SERVICE DISPATCH TABLE
DEF	$DVMOD,DEVMOD		;DEVICE CHRE (RETURNED IN DEVTYP CALLI)
	DEFL	DV$DSK,DVDSK	;DEVICE IS A DISK
	DEFL	DV$TTA,TTYATC	;DEVICE IS A TTY CONTROLLING A JOB
	DEF	DV$ASC,ASSCON	;DEVICE IS ASSIGNED BY CONSOLE COMMAND
	DEF	DV$ASP,ASSPRG	;DEVICE IS OPEN/INIT'ED BY PROGRAM
	SUBTTL	JBTSTS (JOB STATUS) BITS AND BYTES

	;LEFT HALF BITS

DEFL	JS$RUN,RUN		;JOB WANTS TO RUN (MUST BE SIGN)
DEFL	JS$SNA,SNA		;HIGH SEG ASSIGNED (ANALGUOUS TO JNA)
DEFL	JS$CMW,CMWB		;COMMAND WAIT BIT (FOR JOB TO BE SWAPPED IN)
DEFL	JS$SHR,SHRSEG		;SEGMENT IS SHARABLE
DEFL	JS$XPN,JXPN		;SEG MUST BE SWAPPED IN ORDER TO EXPAND CORE
DEFL	JS$JNA,JNA		;JOB NUMBER ASSIGNED (JOB "EXISTS")
DEFL	JS$SYS,SS.SYS		;SEGMENT CAME FROM SYS:
DEFL	JS$JER,JERR		;FATAL JOB ERROR DETECTED BY MONITOR
DEFL	JS$SER,SERR		;SWAP READ ERROR HAS OCCURED FOR THIS SEGMENT
DEFL	JS$LCK,<NSWP,NSHF>	;JOB IS LOCKED
DEFL	JS$SWP,SWP		;JOB IS SWAPPED
DEFL	JS$CTC,CNTRLC		;CONTROL-C PENDING
DEFL	JS$STE,WTMASK		;JOB WAIT STATE
DEFL	JS$WST,WTMASK		;MASK OF JOB WAIT STATE (QUEUE) CODE
DEFL	JS$LOG,JLOG		;JOB IS LOGGED IN
DEFL	JS$JRQ,JRQ		;JOB NEEDS TO BE REQUEUED
DEFL	JS$JAC,JACCT		;PROGRAM IS PRIVILEGED


;RIGHT HALF BITS

DEF	JS$CLK,CLKR		;JOB HAS CLOCK REQUEST PENDING
DEF	JS$JDC,JDC		;JOB IS WAITING FOR .DCORE COMMAND TO FINISH
DEF	JS$OWD,JDCON		;JOB IN ^C STATE WAITING FOR DEVICE
DEF	JS$DEP,JS.DEP		;JOB IS IN DAEMON ERROR PAUSE
DEF	JS$XCT,JS.XO		;JOB IS EXECUTE ONLY
DEF	JS$RUU,JS.RUU		;RUN UUO OR COMMAND IN PROGRESS
	SUBTTL	JBTST2 BITS AND BYTES

;LEFT HALF

DEF	J2$IGS,JS.IGS		;JOB IS DOING A GETSEG CALLI
DEF	J2$HIB,JS.HIB		;JOB IS IN A HIBER CALLI

;RIGHT HALF

DEF	J2$EWS,EWAKEB		;JOB'S EW SATISFIED (EWAKE CALLED)
	J2$WEW==<<-1>_-<^D36-ESLPSZ>>_<^D35-ESLPBP>  ;JOBS'S EW WAIT CODE
	 PURGE	ESLPSZ, ESLPBP	;DUD SYMBOLS




	SUBTTL	JBTRTD BITS AND BYTES

;LEFT HALF (THE VALUES ARE NOT AVAILABLE IN S)

	JR$HPC==17B5		;HPQ VALUE FROM HPQ COMMAND
	JR$HPQ==17B9		;HPQ VALUE FROM HPQ CALLI




	SUBTTL	JBTPDB BITS AND BYTES

;LEFT HALF

	JP$PPP==<<-1>_-<^D36-MCPSIZ>>_<^D35-MCPBPP>  ;PER PROCESS PAGES MASK
	 PURGE	MCPSIZ, MCPBPP	;DUD SYMBOLS



	SUBTTL	RELATED JOB MEMORY SIZE FIELDS

	JP$IMI==000007,,777777	;(JBTIMI) LO SEG PHYSICAL SIZE
	JP$NZS==000770,,000000	;(JBTIMI) NON-ZERO-SECTION MAPS
	JP$IMV==000007,,777777	;(JBTVRT) LO SEG VIRTUAL SIZE
	JP$HMV==007770,,000000	;(JBTVRT) HI SEG VIRTUAL SIZE (NON-SHAR)
	SUBTTL	EVENT WAIT CODES

DEF	EW$TKW,EV.TKW		;TAPE CONTROLLER WAIT
DEF	EW$REW,EV.REW		;TAPE REWIND WAIT
DEF	EW$LBL,EV.LBL		;TAPE LABEL PROCESSING WAIT
DEF	EW$NET,EV.NET		;ANF-10 NETWORK WAIT
DEF	EW$FEI,EV.FEI		;FRONT END INPUT WAIT
DEF	EW$FEO,EV.FEO		;FRONT END OUTPUT WAIT
DEF	EW$D60,EV.D60		;DN60 WAIT
DEF	EW$DCN,EV.DCN		;DECNET NETWORK WAIT
DEF	EW$ETH,EV.ETH		;ETHERNET WAIT
	SUBTTL	DECNET CIRCUIT BLOCKS

;THE CIRCUIT BLOCKS

DEF	$RCNXT,RC.NXT		;LINK TO NEXT CIRCUIT BLOCK
DEF	$RCDLB,RC.DLB		;CIRCUIT BLOCK POINTER TO DLL BLOCK

;THE DLL BLOCK ASSOCIATED WITH EACH CIRCUIT BLOCK

DEF	$DLBYR,DL.BYR		;OFFSET TO BYTES RECEIVED
DEF	$DLBYS,DL.BYS		;OFFSET TO BYTES SENT


;AND NOW FOR OTHER DEFINITIONS ***NOT*** IN ANY (!) UNIVERSAL @#&$#*!#&^!

	$CHAVL==2		;COUNT OF AVAILABLE CHUNKS
	$CHALC==4		;ALLOCATED QUANTA
	  CH$NUM==377777B17	;MASK FOR CHUNKS ALLOCATED
	  CH$SIZ==777777B35	;MASK FOR CHUNKS SIZE (WORDS)
	$CHLEN==5		;LENGTH OF CH-BLOCKS
IF2,<	PURGE	DEF,DEFL>	;SO DON'T CONFUSE ANYONE LATER
	END
