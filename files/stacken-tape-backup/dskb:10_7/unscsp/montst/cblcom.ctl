;CBLCOM.CTL  %012   BATCH JOB THAT CREATES AND RUNS CBLCOM.SCP WHICH
;COMPILES DIRSRT.CBL 7 TIMES.  TO RUN CBLCOM TYPE:
;	SUBMIT CBLCOM/TIME:400,/DIS:DEL
;CBLCOM IS USUALLY RUN BY MONTST.CTL
;P WHITE/SML		4 AUG 77   SM LIBMAN
;
.GOTO SKIP
SCP::
!;;CBLCOM - COBOL COMPILATION - %012   FOR 603 MONITOR
!;;R CLEMENTS/PW/SML  4 AUG 77
!;;SCRIPT TO DO COBOL COMPILATIONS, TO CHECK FOR
!;; MISREADING HIGH SEGMENTS
!IORFS
LOGIN
4,777#
!Q
TEST#
!XIN
SET WATCH VERSION
!;;LET'S BECOME VIRTUAL IF WE CAN
!Q
R SETVM
!;;CHECK VERSION NUMBERS
GET SYS:COBOL
VERSION
GET SYS:TECO
VERSION
GET SYS:COMPIL
VERSION
R PIP
DSK:/Z_
^C
MAKE DIRSRT.CBL
IIDENTIFICATION DIVISION.
PROGRAM-ID. DIRSRT - V002.
REMARKS. SORT A DIRECTORY LISTING.
	ACCEPT FILE NAME AS XXXXXX
	TERMINATE FILE NAME EARLY WITH <CR>
	EXTENSION DIR ASSUMED, MAY BE SPECIFIED IF NAME PADDED TO SIX CHAR
ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
OBJECT-COMPUTER. PDP-10.

INPUT-OUTPUT SECTION.
FILE-CONTROL.
	SELECT DIRECTORY-IN  ASSIGN TO DSK.
	SELECT DIRECTORY-OUT ASSIGN TO DSK.
	SELECT SORT-FILE     ASSIGN TO DSK, DSK, DSK.

DATA DIVISION.
FILE SECTION.

FD	DIRECTORY-IN
	LABEL RECORDS ARE STANDARD
	VALUE OF IDENTIFICATION IS VAL-ID.
01	IN-RECORD	PICTURE X(80); DISPLAY-7.

FD	DIRECTORY-OUT
	LABEL RECORDS ARE STANDARD
	VALUE OF IDENTIFICATION IS OVAL-ID.
01	OUT-RECORD	PICTURE X(80); DISPLAY-7.

SD	SORT-FILE
	DATA RECORD IS SORT-RECORD.
01	SORT-RECORD; DISPLAY-7.
	02 NAME-AND-EXT	PIC X(10).
	02 FILLER	PIC X(70).

WORKING-STORAGE SECTION.
01	VAL-ID DISPLAY-7.
	02 VAL-NAME PIC X(6).
	02 VAL-EXT PIC XXX.

01	OVAL-ID DISPLAY-7.
	02 OVAL-NAME PIC X(6).
	02 FILLER PIC X(3) VALUE "SRT".

PROCEDURE DIVISION.
START.
	DISPLAY "FILE: "
	ACCEPT VAL-ID.
	IF VAL-EXT = SPACES MOVE "DIR" TO VAL-EXT.
	MOVE VAL-NAME TO OVAL-NAME.
	SORT SORT-FILE ON ASCENDING KEY NAME-AND-EXT;
		USING DIRECTORY-IN GIVING DIRECTORY-OUT.
	STOP RUN.
!L
EX
!N
R COBOL
=DIRSRT
^C
R COBOL
=DIRSRT
^C
R COBOL
=DIRSRT
^C
R COBOL
=DIRSRT
^C
R COBOL
=DIRSRT
^C
R COBOL
=DIRSRT
^C
R COBOL
=DIRSRT
^C
DEL *.*
KJOB/D/D
!XOUT
SKIP::
;RUN VIRTUALLY IF WE CAN
.R SETVM
.IF (ERROR)  ;IGNORE
.R TECO
=ERCBLCOM.CTL
*_SCP::
=0,.K
=EWCBLCOM.SCP
=NSKIP::0L
=.,ZKPWEF
;
;SCRIPT FILE COMPLETE.  NOW, RUN THE SCRIPT, 3 JOBS, EACH JOB DOES
;7 COBOL COMPILATIONS
;
.R SCRIPT
*CBLCOM
.CON
*3
*
*CBLCOM
*CBLCOM
*
*
*
*Y
*N
*Y
.IF (ERROR) .GOTO B
.PLEASE CBLCOM SUCCESSFUL
.DELETE CBLCOM.WCH
.GOTO A
B::
.PLEASE ERROR RUNNING CBLCOM.SCP
.QUEUE CBLCOM.WCH/DISPOSE:DELETE
A::
%FIN:
.NOERROR
.DELETE CBLCOM.SCP
.QUEUE INP:SHRH1=/MODIFY/DEPEND:-1
.QUEUE INP:SHRH2=/MODIFY/DEPEND:-1
